version: "3.7"
services:

  java-app:
    image: amazoncorretto
    depends_on:
      - mysql
      - kafka

  node:
    image: node
    environment:
      PROFILE: ${PROFILE}
    working_dir: /m3-node.${PROFILE}/server
    volumes:
      - ../m3-node:/m3-node.${PROFILE}
    entrypoint: bash -c "npm install && node run.js"
    depends_on: [ mysql-migrator ]

  nginx:
    image: nginx
    ports:
      - ${NGINX_PORT_HTTP}:80
      - ${NGINX_PORT_HTTPS}:443
    volumes:
      - ../m3-node/:/m3-node.${PROFILE}/public
      - ./nginx/${PROFILE}/conf.d:/etc/nginx/conf.d
      - ${NGINX_SSL_CERTIFICATE}
      - ${NGINX_SSL_CERTIFICATE_KEY}
    depends_on: [ node ]

  mysql:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes: [ /var/lib/mysql ]

  kafka:
    image: confluentinc/cp-kafka:latest
    # ports profile depends, disable it, because bridge
    #    ports:
    #  - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      # ports profile depends, disable it, because bridge
      #    ports:
      #- 22181:2181

  mysql-migrator:
    image: mysql:5.7
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes: [ ./migrator:/migrator ]
    entrypoint: bash /migrator/run.sh
    depends_on: [ mysql ]


